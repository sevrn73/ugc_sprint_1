version: '3.7'

services:
  ugs.zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0-3-ubi8
    hostname: ugs.zookeeper
    container_name: ugs.zookeeper
    ports:
      - "31203:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ugs.kafka:
    image: confluentinc/cp-kafka:6.2.0-3-ubi8
    hostname: ugs.kafka
    container_name: ugs.kafka
    depends_on:
      - ugs.zookeeper
    ports:
      - "31204:31204"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ugs.zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ugs.kafka:9092,PLAINTEXT_HOST://localhost:31204
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 10
    restart: on-failure

  ugs.kafka-ui:
    image: provectuslabs/kafka-ui
    hostname: ugs.kafka-ui
    container_name: ugs.kafka-ui
    ports:
      - "31205:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ugs.kafka:9092
      KAFKA_CLUSTERS_0_NAME: ugs.kafka
      KAFKA_CLUSTERS_0_ZOOKEEPER: ugs.zookeeper:2181

  ugs:
    container_name: ugs-api
    build:
      context: ./ugs/src
    ports:
      - "8001:8001"

    # build:
    #    context: /.
    #    dockerfile: ugs/src/Dockerfile
    # ports:
    #   - 8000:8000
    env_file:
      - ./.env
